/*********************************************************
    Form
*********************************************************/

fieldset {
  margin: 0;
  padding: 0;
  border: none;
}

label,
.form > .form__label {
  display: block;
  margin-bottom: 0.2rem;
}

input[type="email"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="url"],
textarea {
  display: inline-block;
  width: 100%;
  height: rem(50);
  line-height: rem(50);
  margin-bottom: rem(18);
  margin-right: rem(5);
  padding: 0 rem(10);
  font-family: inherit;
  font-size: 1rem;
  color: $color-body;
  border: 1px solid $color-body;
  border-radius: rem(4);
  //box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
  outline: none;
  transition: 0.2s all ease-out;
  &:focus,
  &:active {
    border-color: $color-primary;
  }
}

textarea {
  max-width: 100%;
  height: 80px;
}

.form {
  &__btn-container {
    @include bp_md {
      float: right;
    }
  }
}

.form {
  &__input {
    &--success {
      border-color: $color-success !important;
    }
    &--error {
      border-color: $color-error !important;
    }
  }
}

// Form Inline
.form-inline {
  display: inline-block;
  margin-bottom: 0;
  vertical-align: middle;
  .form-group {
    display: inline-block;
  }
  .form-group-block {
    display: block;
  }
  input {
    width: auto;
  }
}

// Form inline placehoders
.form-inline-placeholders {
  .form-group input:focus {
    position: relative;
    background: white;
  }
  .form-group label {
    position: absolute;
    line-height: 3rem;
    padding-left: rem(10);
    pointer-events: none; //allows click into
  }
}

// Field Input Search
.field-search {
  display: flex;
  justify-content: flex-start;
  .btn {
    margin-left: -2px;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

input.error {
  border: 1px solid $color-error;
}

.error-message {
  display: none;
  color: $color-error;
  font-size: rem(16);
}

.success-message {
  display: none;
}

.success-message > div {
  width: 100%;
  opacity: 0;
  animation: reveal 1s 1s forwards;
}
/* Appear animation for success message */
@keyframes reveal {
  0%,
  75% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

/* 'SUCCESS!' check animation */
svg.checkmark {
  width: 75px;
  height: 75px;
  margin: 2em;
  text-align: left;
  border-radius: 50%;
  stroke-width: 4;
  stroke: $color-success;
  stroke-miterlimit: 10;
  box-shadow: inset 0px 0px 0px #7ac142;
  transition: 1s all ease;
}

/* Trigger animation we add 'active' class via JS */
svg.checkmark.active {
  animation: moveupwards 1s 1s forwards;
}

/* 'Move upwards' animation below, no need for absolutely positioned
            elements or transform: translate. We'll create the subtle 'moving up'
            effect by playing with margins and size. Responsive friendly! */
@keyframes moveupwards {
  0%,
  75% {
    width: 75px;
    height: 75px;
    margin: 2em;
  }

  100% {
    width: 50px;
    height: 50px;
    margin: 1em;
  }
}

/* Paths inside SVG. Each path will be animated using stroke property
            and 'stroke' animation */
svg > .checkmark-circle {
  stroke-dasharray: 166;
  stroke-dashoffset: 166;
  stroke-width: 3;
  stroke-miterlimit: 10;
  stroke: $color-body;
  fill: none;
  animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
}

svg > .checkmark-check {
  transform-origin: 50% 50%;
  stroke-dasharray: 48;
  stroke-width: 3;
  stroke-dashoffset: 48;
  animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;
}

@keyframes stroke {
  100% {
    stroke-dashoffset: 0;
  }
}

/* Sorry IE and Edge users, no SVG animations supported for you,
          so we'll hide our SVG to prevent empty space gap */
@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  .success-message svg {
    display: none;
  }
}

@supports (-ms-ime-align: auto) {
  .success-message svg {
    display: none;
  }
}

/* Base for label styling */
[type="checkbox"]:not(:checked),
[type="checkbox"]:checked {
  position: absolute;
  left: -9999px;
}
[type="checkbox"]:not(:checked) + label,
[type="checkbox"]:checked + label {
  position: relative;
  padding-left: 1.95em;
  cursor: pointer;
}

/* checkbox aspect */
[type="checkbox"]:not(:checked) + label:before,
[type="checkbox"]:checked + label:before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 1.25em;
  height: 1.25em;
  border: 2px solid #ccc;
  background: #fff;
  border-radius: 4px;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
}
/* checked mark aspect */
[type="checkbox"]:not(:checked) + label:after,
[type="checkbox"]:checked + label:after {
  content: "\2713\0020";
  position: absolute;
  top: 0;
  left: 4px;
  font-size: 1.3em;
  line-height: 0.8;
  color: $color-body;
  transition: all 0.2s;
  font-family: "Lucida Sans Unicode", "Arial Unicode MS", Arial;
}
/* checked mark aspect changes */
[type="checkbox"]:not(:checked) + label:after {
  opacity: 0;
  transform: scale(0);
}
[type="checkbox"]:checked + label:after {
  opacity: 1;
  transform: scale(1);
}
/* disabled checkbox */
[type="checkbox"]:disabled:not(:checked) + label:before,
[type="checkbox"]:disabled:checked + label:before {
  box-shadow: none;
  border-color: #bbb;
  background-color: #ddd;
}
[type="checkbox"]:disabled:checked + label:after {
  color: #999;
}
[type="checkbox"]:disabled + label {
  color: #aaa;
}
/* accessibility */
[type="checkbox"]:checked:focus + label:before,
[type="checkbox"]:not(:checked):focus + label:before {
  border: 2px dotted $color-body;
}

/* hover style just for information */
label:hover:before {
  border: 2px solid $color-body !important;
}

.grid {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  flex: 0 1 auto;
  @media (min-width: 800px) {
    margin: 0 -7.5px;
  }
}
.half,
.full {
  @media (min-width: 800px) {
    padding: 0 7.5px;
  }
}
.half {
  flex-basis: 50%;
  width: 50%;
  @media (max-width: 800px) {
    flex-basis: 100%;
    width: 100%;
  }
}
.full {
  flex-basis: 100%;
  width: 100%;
}

.m-btm-20 {
  margin-bottom: 20px;
}
